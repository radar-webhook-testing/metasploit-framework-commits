module Msf
module Ui
module Console
module CommandDispatcher

class Exploit

	@@exploit_opts = Rex::Parser::Arguments.new(
		"-e" => [ true,  "The payload encoder to use.  If none is specified, ENCODER is used." ],
		"-h" => [ false, "Help banner."                                                        ],
		"-n" => [ true,  "The NOP generator to use.  If none is specified, NOP is used."       ],
		"-o" => [ true,  "A comma separated list of options in VAR=VAL format."                ],
		"-p" => [ true,  "The payload to use.  If none is specified, PAYLOAD is used."         ],
		"-t" => [ true,  "The target index to use."                                            ],
		"-z" => [ true,  "Do not interact with the session after successful exploitation."     ])

	include Msf::Ui::Console::ModuleCommandDispatcher

	def commands
		{
			"exploit" => "Launch an exploit attempt",
		}
	end

	def name
		"Exploit"
	end

	#
	# Launches an exploitation attempt
	#
	def cmd_exploit(*args)
	end

end

end end end end
