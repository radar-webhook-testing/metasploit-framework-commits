#!/usr/bin/ruby

$:.unshift(File.join(File.dirname(__FILE__), '..', '..', '..'))

require 'test/unit'
require 'rex/proto/dcerpc/packet'

class Rex::Proto::DCERPC::Packet::UnitTest < Test::Unit::TestCase

	Klass = Rex::Proto::DCERPC::Packet

	def test_parse
		
		r1 = Klass.make_bind('367abb81-9844-35f1-ad32-98f038001003', '2.0')
		r2 = Klass.make_bind_fake_multi('367abb81-9844-35f1-ad32-98f038001003', '2.0')
		r3 = Klass.make_alter_context('367abb81-9844-35f1-ad32-98f038001003', '2.0')
	
		r4 = Klass.make_request(1337, '', 1024, 7331)
		r5 = Klass.make_request(1337, 'ABCD', 1024, 7331)
		r6 = Klass.make_request(1337, 'ABCD', 3, 7331)
		r7 = Klass.make_request(1337, 'ABCD', 1, 7331)	
		
		
		v1 = ["\005\000\v\003\020\000\000\000H\000\000\000\000\000\000\000\320\026\320\026\000\000\000\000\001\000\000\000\000\000\001\000\201\273z6D\230\3615\2552\230\3608\000\020\003\002\000\000\000\004]\210\212\353\034\311\021\237\350\010\000+\020H`\002\000\000\000", 0]
		v2 = ["\005\000\v\003\020\000\000\000\010\003\000\000\000\000\000\000\320\026\320\026\000\000\000\000\021\000\000\000\000\000\001\000\252\260\0222\306\003\247M-5m\317r\207L\261\001\000\001\000\004]\210\212\353\034\311\021\237\350\010\000+\020H`\002\000\000\000\001\000\001\000u\326\353\333\265\332Mgn\363\350\227\350\001\256\177\005\000\003\000\004]\210\212\353\034\311\021\237\350\010\000+\020H`\002\000\000\000\002\000\001\000C@\257\025\227\001\333\255\276\020\307\017bk\002B\001\000\001\000\004]\210\212\353\034\311\021\237\350\010\000+\020H`\002\000\000\000\003\000\001\000\250\375*<\363\327\200\233_V\355\251\010\271\374\223\001\000\003\000\004]\210\212\353\034\311\021\237\350\010\000+\020H`\002\000\000\000\004\000\001\000iw\314\221\244\345\336Q]\345Eoq\336\257\307\004\000\003\000\004]\210\212\353\034\311\021\237\350\010\000+\020H`\002\000\000\000\005\000\001\000\2179\331\261\252\326\256_\317\200\253\337#-G\324\005\000\003\000\004]\210\212\353\034\311\021\237\350\010\000+\020H`\002\000\000\000\006\000\001\000q~L\021&\203gt9\026\361\024\177\232\362r\000\000\001\000\004]\210\212\353\034\311\021\237\350\010\000+\020H`\002\000\000\000\a\000\001\000\320k\242\332\3043\204\226`8\343}\260\306\265\361\002\000\001\000\004]\210\212\353\034\311\021\237\350\010\000+\020H`\002\000\000\000\010\000\001\000\267F\302\365n\177\311`\022\3439\313?\3373Y\003\000\000\000\004]\210\212\353\034\311\021\237\350\010\000+\020H`\002\000\000\000\t\000\001\000p1\376\345\027\eN\251\351\354\333\034}\0206\376\004\000\001\000\004]\210\212\353\034\311\021\237\350\010\000+\020H`\002\000\000\000\n\000\001\000\304\\7Ex\027\020\034\3420\000\344\317\370\334\374\005\000\000\000\004]\210\212\353\034\311\021\237\350\010\000+\020H`\002\000\000\000\v\000\001\000\200\265\021\230Xt\301\237\177m\325\264\316S8\310\002\000\000\000\004]\210\212\353\034\311\021\237\350\010\000+\020H`\002\000\000\000\f\000\001\000\364\355\t\212\321u\233\273\"\034\324~\244\250\317\021\000\000\000\000\004]\210\212\353\034\311\021\237\350\010\000+\020H`\002\000\000\000\r\000\001\000\307\000Rif\024\361\"\334#P\335\t\357\371\273\004\000\002\000\004]\210\212\353\034\311\021\237\350\010\000+\020H`\002\000\000\000\016\000\001\000\201\273z6D\230\3615\2552\230\3608\000\020\003\002\000\000\000\004]\210\212\353\034\311\021\237\350\010\000+\020H`\002\000\000\000\017\000\001\000n\345j\263}\275\017S\277@IC\216\223xR\004\000\000\000\004]\210\212\353\034\311\021\237\350\010\000+\020H`\002\000\000\000\020\000\001\000k\351 \n\205n\314\3033Y\237t#\251\330\034\005\000\001\000\004]\210\212\353\034\311\021\237\350\010\000+\020H`\002\000\000\000", 14]
		v3 = "\005\000\016\003\020\000\000\000H\000\000\000\000\000\000\000\320\026\320\026\000\000\000\000\001\000\000\000\000\000\001\000\201\273z6D\230\3615\2552\230\3608\000\020\003\002\000\000\000\004]\210\212\353\034\311\021\237\350\010\000+\020H`\002\000\000\000"
		v4 = ["\005\000\000\003\020\000\000\000\030\000\000\000\000\000\000\000\000\000\000\000\243\0349\005"]
		v5 = ["\005\000\000\003\020\000\000\000\034\000\000\000\000\000\000\000\004\000\000\000\243\0349\005ABCD"]
		v6 = ["\005\000\000\001\020\000\000\000\e\000\000\000\000\000\000\000\003\000\000\000\243\0349\005ABC", "\005\000\000\002\020\000\000\000\031\000\000\000\000\000\000\000\001\000\000\000\243\0349\005D"]
		v7 = ["\005\000\000\001\020\000\000\000\031\000\000\000\000\000\000\000\001\000\000\000\243\0349\005A", "\005\000\000\000\020\000\000\000\031\000\000\000\000\000\000\000\001\000\000\000\243\0349\005B", "\005\000\000\000\020\000\000\000\031\000\000\000\000\000\000\000\001\000\000\000\243\0349\005C", "\005\000\000\002\020\000\000\000\031\000\000\000\000\000\000\000\001\000\000\000\243\0349\005D"]

		assert_equal(r1, v1)
		assert_equal(r2.length, v2.length)
		assert_equal(r3, v3)
		assert_equal(r4, v4)				
		assert_equal(r5, v5)
		assert_equal(r6, v6)
		assert_equal(r7, v7)		
	end

end
