Metasploit Framework MsfGUI TODO List
=====================================

1 - Modify the signal-connect on the MyExploitTree class
On Gtk::TreeView of this class, remove "one shot", just make it "execute", dont ask for RHOST
the exploit shouldnt get listed in the One-Shot piece until its completed and running and it 
should be removed once the exploit finishes.
=> DONE


2 - Built the MSFLog with a Gtk::TextView
the MSFLog needs to also contain the outpout of the exploits as they run
So redirect the output User picks exploit, goes straight to wizard, they click Go
exploit is added to the Targets list while its in running state
(for background exploits like WMF, this will stay there until you manually kill it)
when a new session is created, those are added automatically to the sessions list
and the output of the exploits are sent to the MSFLogs window.
Add some colours with tags
=> Partially done

3 - bind a signal-connect to a running exploit
you can right click running exploits and kill them (this is technically a job)
(right click from Targets)

4 - session interaction
needs a wider console, some little  buttons for sending '^C' and stuff 
(maybe even a toggle for hex-mode)
so when youre typing on a command shell and need to send like ^D to close out 'cat'
also, sessions needs a right-click meny for 'Close'
and some way to detect when a session is dead and remove it from the list
ie. you type "exit" on the shell

5 - Preferences page
Ton of stuff like binding all Databases stuff or adding preselected payloads user

6 - Exploit research
I think there's a way to perform this feature :
- register all child iters from the parent modules (Standart, Payloads, Encoders, ...) to an array
- add a Gtk::Entry beside the TreeView or bind a Gtk::Dialog to a right click _Search
- Once, the research return true, jump to the selected iter and perform the usual view
=> DONE


7 - the msfconsole
A fun feature will be to plug the msfconsole to :
 the Gtk::NoteBook page or/and a dedicated windows/dialog
